class WebDBUtil{initialize(){this.createDatabase(),this.createTables()}createDatabase(){this.dbConf=this.dbConf?this.dbConf:window.CONST.DB,this.webSQL=window.openDatabase(this.dbConf.DB_NAME,this.dbConf.DB_VERSION,this.dbConf.DB_DESC,this.dbConf.DB_SIZE)}createTables(){this.dbConf=this.dbConf?this.dbConf:window.CONST.DB;const e=this.dbConf.TABLES;for(let t in e)if(e[t]){let i=e[t],n=`CREATE TABLE IF NOT EXISTS ${t} (`;for(let e in i)if(i[e]){let t=i[e];n+=`${e} `,n+=`${t.type} `,n+=t.notNull?"NOT NULL":"",n+=t.idField?"PRIMARY KEY ASC":"",n+=","}n=n.slice(0,-1),n+=")",this.doTrx(n,[]).then(()=>{this.createTablesSuccessCallback()}).catch(e=>{throw e})}}createTablesSuccessCallback(){document.dispatchEvent(new CustomEvent("web-db-initialized"))}selectDiary(e){let t="SELECT * FROM tm_diaries WHERE 1=1";if(e)for(const i in e)e[i]&&(t+=` AND ${i} = '${e[i]}'`);return this.doTrx(t,[])}replaceDiary(e){const t=[e.id,e.fileName,e.year,e.month,e.date,e.preview,e.content];return this.doTrx("REPLACE INTO tm_diaries\n                  (id, fileName, year, month, date, preview, content)\n                VALUES\n                  (?, ?, ?, ?, ?, ?, ?)",t)}insertDiary(e){const t=[e.fileName,e.year,e.month,e.date,e.preview,e.content];return this.doTrx("INSERT INTO tm_diaries\n                  (fileName, year, month, date, preview, content)\n                VALUES\n                  (?, ?, ?, ?, ?, ?)",t)}deleteDiary(e){const t=[e];return this.doTrx("DELETE FROM tm_diaries WHERE fileName = ?",t)}insertPwd(e){const t=[e];return this.doTrx("INSERT INTO tm_auth\n                  (encrypted_pwd)\n                VALUES \n                  (?)",t)}deletePwd(){return this.doTrx("DELETE FROM tm_auth",[])}checkAuth(e){return new Promise((t,i)=>{this.doTrx("SELECT encrypted_pwd FROM tm_auth LIMIT 1",[]).then(n=>{e===n[0].encrypted_pwd?t():i()})})}doTrx(e,t){return new Promise(i=>{this.webSQL&&this.webSQL.transaction&&this.webSQL.transaction(n=>{n.executeSql(e,t,(e,t)=>{i(this.getResultFromRows(t.rows))},(e,t)=>{throw new Error(t.message)})})})}getResultFromRows(e){const t=[];for(let i=0;i<e.length;i++)t.push(e.item(i));return t}}